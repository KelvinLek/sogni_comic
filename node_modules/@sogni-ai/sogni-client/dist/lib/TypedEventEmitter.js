"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class TypedEventEmitter {
    constructor() {
        this.listeners = {};
    }
    /**
     * Add an event listener, returns a function that can be called to remove the listener
     * @param event
     * @param listener
     */
    on(event, listener) {
        if (!this.listeners[event]) {
            this.listeners[event] = [];
        }
        this.listeners[event].push(listener);
        return () => {
            this.off(event, listener);
        };
    }
    /**
     * Add an event listener that will be called only once
     * @param event
     * @param listener
     */
    once(event, listener) {
        const remove = this.on(event, (data) => {
            remove();
            listener(data);
        });
        return remove;
    }
    /**
     * Remove an event listener
     * @param event
     * @param listener
     */
    off(event, listener) {
        if (!this.listeners[event]) {
            return;
        }
        this.listeners[event] = this.listeners[event].filter((l) => l !== listener);
    }
    /**
     * Dispatch an event to all listeners
     * @param event
     * @param data
     */
    emit(event, data) {
        const listeners = this.listeners[event];
        if (!listeners) {
            return;
        }
        listeners.forEach((listener) => listener(data));
    }
}
exports.default = TypedEventEmitter;
//# sourceMappingURL=TypedEventEmitter.js.map