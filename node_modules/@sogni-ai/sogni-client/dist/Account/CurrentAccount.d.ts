import DataEntity from '../lib/DataEntity';
import { Balances } from './types';
import { SupernetType } from '../ApiClient/WebSocketClient/types';
/**
 * @inline
 */
export interface AccountData {
    /**
     * Current network status:
     * - `connected` - connected to the socket
     * - `disconnected` - disconnected from the socket
     * - `connecting` - connecting to the socket
     * - `switching` - switching network type (fast/relaxed)
     *
     * @default 'disconnected'
     */
    networkStatus: 'connected' | 'disconnected' | 'connecting' | 'switching';
    network: SupernetType | null;
    balance: Balances;
    walletAddress?: string;
    username?: string;
    token?: string;
    refreshToken?: string;
}
/**
 * Current account data.
 * @expand
 */
declare class CurrentAccount extends DataEntity<AccountData> {
    constructor(data?: AccountData);
    _clear(): void;
    get isAuthenicated(): boolean;
    get networkStatus(): "connected" | "disconnected" | "connecting" | "switching";
    get network(): SupernetType | null;
    get balance(): Balances;
    get walletAddress(): string | undefined;
    get username(): string | undefined;
    get token(): string | undefined;
    get refreshToken(): string | undefined;
}
export default CurrentAccount;
