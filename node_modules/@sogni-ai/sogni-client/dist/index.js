"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SogniClient = exports.Project = exports.Job = exports.CurrentAccount = exports.ApiError = void 0;
// Account API
const Account_1 = __importDefault(require("./Account"));
const CurrentAccount_1 = __importDefault(require("./Account/CurrentAccount"));
exports.CurrentAccount = CurrentAccount_1.default;
// ApiClient
const ApiClient_1 = __importStar(require("./ApiClient"));
Object.defineProperty(exports, "ApiError", { enumerable: true, get: function () { return ApiClient_1.ApiError; } });
// Utils
const DefaultLogger_1 = require("./lib/DefaultLogger");
const EIP712Helper_1 = __importDefault(require("./lib/EIP712Helper"));
// Projects API
const Projects_1 = __importDefault(require("./Projects"));
const Job_1 = __importDefault(require("./Projects/Job"));
exports.Job = Job_1.default;
const Project_1 = __importDefault(require("./Projects/Project"));
exports.Project = Project_1.default;
// Stats API
const Stats_1 = __importDefault(require("./Stats"));
class SogniClient {
    constructor(config) {
        this.account = new Account_1.default(config);
        this.projects = new Projects_1.default(config);
        this.stats = new Stats_1.default(config);
        this.apiClient = config.client;
    }
    get currentAccount() {
        return this.account.currentAccount;
    }
    /**
     * Create client instance, with default configuration
     * @param config
     */
    static createInstance(config) {
        return __awaiter(this, void 0, void 0, function* () {
            const restEndpoint = config.restEndpoint || 'https://api.sogni.ai';
            const socketEndpoint = config.socketEndpoint || 'wss://socket.sogni.ai';
            const network = config.network || 'fast';
            const logger = config.logger || new DefaultLogger_1.DefaultLogger(config.logLevel || 'warn');
            const isTestnet = config.testnet !== undefined ? config.testnet : false;
            const client = new ApiClient_1.default(restEndpoint, socketEndpoint, config.appId, network, logger, config.disableSocket);
            const eip712 = new EIP712Helper_1.default({
                name: isTestnet ? 'Sogni-testnet' : 'Sogni AI',
                version: '1',
                chainId: isTestnet ? '84532' : '8453'
            });
            return new SogniClient({ client, eip712 });
        });
    }
}
exports.SogniClient = SogniClient;
//# sourceMappingURL=index.js.map